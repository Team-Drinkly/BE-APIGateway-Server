plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.9'  // 최신 3.1.x 버전 사용
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.drinkhere'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")  // Spring Cloud 버전 다운그레이드 (호환 문제 해결)
}

dependencies {
    // Gateway & Eureka 클라이언트
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT (보안)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'

    // Jackson (Java Time 지원)
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Spring Cloud Config (Config Server 사용 안 할 경우 주석 처리 가능)
    // implementation "org.springframework.cloud:spring-cloud-starter-config"

    // Actuator (모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // WebFlux (Gateway는 WebFlux 기반)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // SpringDoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'

    // 테스트 관련 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archivesBaseName = 'ApiGateway'
    archiveFileName = 'ApiGateway.jar'
    archiveVersion = "0.0.1"
}
